name: build

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

env:
  INIT_IMAGE: 4rbor/runesapi-init
  API_IMAGE: 4rbor/runesapi
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with: { node-version: '12.19' }
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: ${{ runner.os }}-npm-

      - name: Setup variables
        id: get_vars
        run: |
          export V=$(jq -r .version package.json)
          export V_MAJOR=$(jq -r '.version | split(".")[0]' package.json)
          export V_MINOR=$(jq -r '.version | split(".")[1]' package.json)
          export V_MAJOR_MINOR=$V_MAJOR.$V_MINOR
          export BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "V=$V" >> $GITHUB_ENV
          echo "V_MAJOR=$V_MAJOR" >> $GITHUB_ENV
          echo "V_MAJOR_MINOR=$V_MAJOR_MINOR" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Install NPM dependencies
        run: npm ci
      - name: Quality checks
        run: npm run check
      - name: Unit tests
        run: npm test

      - name: Docker login
        env:
          DOCKER_USER: ${{ secrets.DH_USER }}
          DOCKER_PASSWORD: ${{ secrets.DH_PASS }}
        run: docker login --username $DOCKER_USER --password $DOCKER_PASSWORD

      - name: Docker build and publish
        run: \
          docker build . -f=Dockerfile \
          -t ${{ env.API_IMAGE }}:latest \
          -t ${{ env.API_IMAGE }}:${{ env.V }} \
          -t ${{ env.API_IMAGE }}:${{ env.V_MAJOR }} \
          -t ${{ env.API_IMAGE }}:${{ env.V_MAJOR_MINOR }} && \
          docker push -a
