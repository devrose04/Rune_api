name: build

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with: { node-version: '12.19' }
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: ${{ runner.os }}-npm-

      - name: Setup variables
        id: get_vars
        run: |
          export V=$(jq -r .version package.json)
          export V_MAJOR=$(jq -r '.version | split(".")[0]' package.json)
          export V_MINOR=$(jq -r '.version | split(".")[1]' package.json)
          export V_MAJOR_MINOR=$V_MAJOR.$V_MINOR
          export BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "V=$V" >> $GITHUB_ENV
          echo "V_MAJOR=$V_MAJOR" >> $GITHUB_ENV
          echo "V_MAJOR_MINOR=$V_MAJOR_MINOR" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          if [ $BRANCH_NAME = "main" ]; then
            echo "::set-output name=tags::$V, $V_MAJOR, $V_MAJOR_MINOR, latest"
          fi

      - name: Install NPM dependencies
        run: npm ci
      - name: Quality checks
        run: npm run check
      - name: Unit tests
        run: npm test

      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PASS }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          tags: runesapi:latest runesapi:${{ env.V }} runesapi:${{ env.V_MAJOR }} runesapi:${{ env.V_MAJOR_MINOR }}
          push: true
